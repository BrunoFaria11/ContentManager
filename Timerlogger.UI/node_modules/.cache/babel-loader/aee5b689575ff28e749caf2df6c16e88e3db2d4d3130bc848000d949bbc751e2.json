{"ast":null,"code":"import { ProjectModel } from \"../models/ProjectModel\";\nimport { TimeHistoryModel } from \"../models/TimeHistoryModel\";\nconst BASE_URL = \"https://localhost:3001/api\";\nexport async function getAll(projectId) {\n  debugger;\n  const response = await fetch(`${BASE_URL}/TimerHistory/GetAllTimerHistories?ProjectId=${projectId}`);\n  return response.json();\n}\nexport async function postTimeHistory(projectId, startDate, endDate) {\n  const timeHistory = new TimeHistoryModel(projectId, startDate, endDate);\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(timeHistory)\n  };\n  const response = await fetch(`${BASE_URL}/TimerHistory`, requestOptions);\n  const data = await response.json();\n  return data;\n}\nexport async function editProject(id, name, deadLine, timePerWeek, isCompleted) {\n  const project = new ProjectModel(id, name, deadLine, timePerWeek, 0, isCompleted);\n  const requestOptions = {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(project)\n  };\n  const response = await fetch(`${BASE_URL}/TimerHistory`, requestOptions);\n  const data = await response.json();\n  return data;\n}","map":{"version":3,"names":["ProjectModel","TimeHistoryModel","BASE_URL","getAll","projectId","response","fetch","json","postTimeHistory","startDate","endDate","timeHistory","requestOptions","method","headers","body","JSON","stringify","data","editProject","id","name","deadLine","timePerWeek","isCompleted","project"],"sources":["/Users/brunofaria/Documents/Projects/Visma/bruno/Timerlogger.UI/src/app/api/timeHistory.ts"],"sourcesContent":["import { ProjectModel } from \"../models/ProjectModel\";\nimport { TimeHistoryModel } from \"../models/TimeHistoryModel\";\n\nconst BASE_URL = \"https://localhost:3001/api\";\n\nexport async function getAll(projectId: string) {\n  debugger\n  const response = await fetch(\n    `${BASE_URL}/TimerHistory/GetAllTimerHistories?ProjectId=${projectId}`\n  );\n  return response.json();\n}\n\nexport async function postTimeHistory(\n  projectId: String,\n  startDate: Date,\n  endDate: Date\n) {\n  const timeHistory = new TimeHistoryModel(projectId, startDate, endDate);\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(timeHistory),\n  };\n  const response = await fetch(`${BASE_URL}/TimerHistory`, requestOptions);\n  const data = await response.json();\n  return data;\n}\n\nexport async function editProject(\n  id: String,\n  name: String,\n  deadLine: Date,\n  timePerWeek: Number,\n  isCompleted: boolean\n) {\n  const project = new ProjectModel(\n    id,\n    name,\n    deadLine,\n    timePerWeek,\n    0,\n    isCompleted\n  );\n  const requestOptions = {\n    method: \"PATCH\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(project),\n  };\n  const response = await fetch(`${BASE_URL}/TimerHistory`, requestOptions);\n  const data = await response.json();\n  return data;\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,wBAAwB;AACrD,SAASC,gBAAgB,QAAQ,4BAA4B;AAE7D,MAAMC,QAAQ,GAAG,4BAA4B;AAE7C,OAAO,eAAeC,MAAMA,CAACC,SAAiB,EAAE;EAC9C;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,GAAEJ,QAAS,gDAA+CE,SAAU,EAAC,CACvE;EACD,OAAOC,QAAQ,CAACE,IAAI,EAAE;AACxB;AAEA,OAAO,eAAeC,eAAeA,CACnCJ,SAAiB,EACjBK,SAAe,EACfC,OAAa,EACb;EACA,MAAMC,WAAW,GAAG,IAAIV,gBAAgB,CAACG,SAAS,EAAEK,SAAS,EAAEC,OAAO,CAAC;EACvE,MAAME,cAAc,GAAG;IACrBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,WAAW;EAClC,CAAC;EACD,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,eAAc,EAAEU,cAAc,CAAC;EACxE,MAAMM,IAAI,GAAG,MAAMb,QAAQ,CAACE,IAAI,EAAE;EAClC,OAAOW,IAAI;AACb;AAEA,OAAO,eAAeC,WAAWA,CAC/BC,EAAU,EACVC,IAAY,EACZC,QAAc,EACdC,WAAmB,EACnBC,WAAoB,EACpB;EACA,MAAMC,OAAO,GAAG,IAAIzB,YAAY,CAC9BoB,EAAE,EACFC,IAAI,EACJC,QAAQ,EACRC,WAAW,EACX,CAAC,EACDC,WAAW,CACZ;EACD,MAAMZ,cAAc,GAAG;IACrBC,MAAM,EAAE,OAAO;IACfC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACQ,OAAO;EAC9B,CAAC;EACD,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,eAAc,EAAEU,cAAc,CAAC;EACxE,MAAMM,IAAI,GAAG,MAAMb,QAAQ,CAACE,IAAI,EAAE;EAClC,OAAOW,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}