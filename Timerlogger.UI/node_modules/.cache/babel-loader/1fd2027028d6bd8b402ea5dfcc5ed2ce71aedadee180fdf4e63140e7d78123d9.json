{"ast":null,"code":"import { ProjectModel } from \"../models/Project\";\nconst BASE_URL = \"https://localhost:3001/api\";\nexport async function getAll() {\n  const response = await fetch(`${BASE_URL}/Projects/GetAllProjects`);\n  return response.json();\n}\nexport async function postProject(name, deadLine, timePerWeek) {\n  const project = new ProjectModel(\"\", name, deadLine, timePerWeek, 0, false);\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(project)\n  };\n  const response = await fetch(`${BASE_URL}/Projects`, requestOptions);\n  const data = await response.json();\n  return data;\n}\nexport async function editProject(id, name, deadLine, timePerWeek, isCompleted) {\n  const project = new ProjectModel(id, name, deadLine, timePerWeek, 0, isCompleted);\n  const requestOptions = {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(project)\n  };\n  const response = await fetch(`${BASE_URL}/Projects`, requestOptions);\n  const data = await response.json();\n  return data;\n}","map":{"version":3,"names":["ProjectModel","BASE_URL","getAll","response","fetch","json","postProject","name","deadLine","timePerWeek","project","requestOptions","method","headers","body","JSON","stringify","data","editProject","id","isCompleted"],"sources":["/Users/brunofaria/Documents/Projects/Visma/bruno/Timerlogger.UI/src/app/api/projects.ts"],"sourcesContent":["import { ProjectModel } from \"../models/Project\";\n\nconst BASE_URL = \"https://localhost:3001/api\";\n\nexport async function getAll() {\n  const response = await fetch(`${BASE_URL}/Projects/GetAllProjects`);\n  return response.json();\n}\n\nexport async function postProject(\n  name: String,\n  deadLine: Date,\n  timePerWeek: Number\n) {\n  const project = new ProjectModel(\"\", name, deadLine, timePerWeek, 0, false);\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(project),\n  };\n  const response = await fetch(`${BASE_URL}/Projects`, requestOptions);\n  const data = await response.json();\n  return data;\n}\n\nexport async function editProject(\n    id:String,\n    name: String,\n    deadLine: Date,\n    timePerWeek: Number,\n    isCompleted: boolean\n  ) {\n    const project = new ProjectModel(id, name, deadLine, timePerWeek, 0, isCompleted);\n    const requestOptions = {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(project),\n    };\n    const response = await fetch(`${BASE_URL}/Projects`, requestOptions);\n    const data = await response.json();\n    return data;\n  }\n  "],"mappings":"AAAA,SAASA,YAAY,QAAQ,mBAAmB;AAEhD,MAAMC,QAAQ,GAAG,4BAA4B;AAE7C,OAAO,eAAeC,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,QAAS,0BAAyB,CAAC;EACnE,OAAOE,QAAQ,CAACE,IAAI,EAAE;AACxB;AAEA,OAAO,eAAeC,WAAWA,CAC/BC,IAAY,EACZC,QAAc,EACdC,WAAmB,EACnB;EACA,MAAMC,OAAO,GAAG,IAAIV,YAAY,CAAC,EAAE,EAAEO,IAAI,EAAEC,QAAQ,EAAEC,WAAW,EAAE,CAAC,EAAE,KAAK,CAAC;EAC3E,MAAME,cAAc,GAAG;IACrBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,OAAO;EAC9B,CAAC;EACD,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,QAAS,WAAU,EAAEU,cAAc,CAAC;EACpE,MAAMM,IAAI,GAAG,MAAMd,QAAQ,CAACE,IAAI,EAAE;EAClC,OAAOY,IAAI;AACb;AAEA,OAAO,eAAeC,WAAWA,CAC7BC,EAAS,EACTZ,IAAY,EACZC,QAAc,EACdC,WAAmB,EACnBW,WAAoB,EACpB;EACA,MAAMV,OAAO,GAAG,IAAIV,YAAY,CAACmB,EAAE,EAAEZ,IAAI,EAAEC,QAAQ,EAAEC,WAAW,EAAE,CAAC,EAAEW,WAAW,CAAC;EACjF,MAAMT,cAAc,GAAG;IACrBC,MAAM,EAAE,OAAO;IACfC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,OAAO;EAC9B,CAAC;EACD,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,QAAS,WAAU,EAAEU,cAAc,CAAC;EACpE,MAAMM,IAAI,GAAG,MAAMd,QAAQ,CAACE,IAAI,EAAE;EAClC,OAAOY,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}